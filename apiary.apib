FORMAT: 1A
HOST: http://polls.apiblueprint.org/
# Motiva

Descrição da API do 

## Login [/login]
### Login [POST]
Realiza login através de nome de usuário e senha

+ Attributes
    + username: renan (required, string) - Username of a user.
    + password: 123456 (required, string) - Password of a user.
    
+ Request (application/json)
  
+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
                    "username": "lcleite",
                    "user_id": 1,
                    "active": true
                }
            }


# Group User
Ações relacionadas ao usuário

## Dados do Usuário Logado [/user]
### Get User [GET]

Solicita os dados do usuário logado

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "logged_in_user":
                    {
                        "first_name": "Renan",
                        "last_name": "Hozumi",
                        "description": "string",
                        "username": "renanhb",
                        "avatar_url": "https://source.unsplash.com/random/200x200",
                        "email": "renan.hbarbieri@gmail.com",
                        "facebook": "@renanhb",
                        "github": "@renanBarbieri",
                        "linkedin": "string",
                        "level":
                        {
                            "id": 3,
                            "name": "Profissional",
                            "description": "Nível Profissional",
                            "experience": 90,
                            "next_level_experience": 110,
                            "next_level_name": "Mestre"
                        },
                        "achievements":
                        [
                            {
                                "id": 20,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de ouro",
                                "description": "bla bla bla wiskas sache"
                            },
                            {
                                "id": 30,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de prata",
                                "description": "bla bla bla wiskas sache"
                            },
                            {
                                "id": 32,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de bronze",
                                "description": "bla bla bla wiskas sache"
                            },
                            {
                                "id": 18,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Na direção certa",
                                "description": "bla bla bla wiskas sache"
                            },
                            {
                                "id": 78,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Reta Final",
                                "description": "bla bla bla wiskas sache"
                            },
                            {
                                "id": 56,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Na direção certa",
                                "description": "bla bla bla wiskas sache"
                            }
                        ],
                        "interests":
                        [
                            {
                                "name": "Swift",
                                "id": 23
                            },
                            {
                                "name": "Python",
                                "id": 34
                            },
                            {
                                "name": "Objective-C",
                                "id": 65
                            },
                            {
                                "name": "Ruby",
                                "id": 2
                            }
                        ],
                        "starred_posts":
                        [
                            {
                                
                            }
                        ]
                    }
                }
            }


## Dados do Usuário [/user/{username}]
### Get User [GET]

Solicita os dados do perfil de um usuário

+ Request (application/json)
    + Headers
            
            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization
            
    + Parameters
        + username: "renan" (required, String) - Username of some user.

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": 
                {
                    "user":
                    {
                        "first_name": "Renan",
                        "last_name": "Hozumi",
                        "description": "string",
                        "username": "renanhb",
                        "avatar_url": "https://source.unsplash.com/random/200x200",
                        "email": "renan.hbarbieri@gmail.com",
                        "facebook": "@renanhb",
                        "github": "@renanBarbieri",
                        "linkedin": "string",
                        "level": 
                        {
                            "id": 3,
                            "name": "Profissional",
                            "description": "Nível Profissional"
                        },
                        "achievements": 
                        [
                            {
                                "id": 20,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de ouro",
                                "description": "bla bla bla wiskas sache"
                            }, 
                            {
                                "id": 30,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de prata",
                                "description": "bla bla bla wiskas sache"
                            }, 
                            {
                                "id": 32,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Coração de bronze",
                                "description": "bla bla bla wiskas sache"
                            }, 
                            {
                                "id": 18,
                                "image_url": "https://source.unsplash.com/random/80x80",
                                "name": "Na direção certa",
                                "description": "bla bla bla wiskas sache"
                            }
                        ],
                        "interests": 
                        [
                            {
                                "name": "Swift",
                                "id": 23
                            }, 
                            {
                                "name": "Python",
                                "id": 34
                            }, 
                            {
                                "name": "Objective-C",
                                "id": 65
                            }, 
                            {
                                "name": "Ruby",
                                "id": 2
                            }, 
                            {
                                "name": "Flutter",
                                "id": 3
                            }
                        ]
                    }
                }
            }
            
## Upload de avatar do usuário [/upload/user_avatar]
### Upload User Avatar [POST]
Faz upload da imagem de perfil de um usuário

+ Attributes
    + image_file: [File] (required, object) - File of a user avatar.

+ Request (form-data)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "message": "Upload realizado com sucesso",
                    "filename": "/media/<file_name>.jpg"
                }
            }
            
## Posts de um usuário [/user/{username}/posts?order_by={order}&limit={limit}&page={page}]
### Get Posts [GET]

Solicita os posts de um usuário

+ Parameters
    + username: "lcleite" (required, String)
    + order: "-like" (required, String) - possíveis ordenações: like, view, date. '+' para crescente e '-' para decrescente
    + limit: 5 (required, Number) - Limit number of articles
    + page: 1 (required, Number) - Page number of query result


+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "posts":
                    [
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 0",
                            "subtitle": "Esse é um subtitulo",
                            "favorites": 19,
                            "likes": 5,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "publishDate": 1519495297000,
                            "editedDate": 1519495297000,
                            "owner": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "name": "Usuario de teste",
                                "id": 76
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 2",
                            "subtitle": "Esse é um subtitulo",
                            "favorites": 3,
                            "likes": 11,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "publishDate": 1519495297000,
                            "editedDate": 1519495297000,
                            "owner": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "name": "Usuario de teste 3",
                                "id": 43
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 3",
                            "subtitle": "Esse é um subtitulo",
                            "favorites": 6,
                            "likes": 1,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "publishDate": 1519495297000,
                            "editedDate": 1519495297000,
                            "owner": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "name": "Usuario de teste 2",
                                "id": 56
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 4",
                            "subtitle": "Esse é um subtitulo",
                            "favorites": 4,
                            "likes": 10,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "publishDate": 1519495297000,
                            "editedDate": 1519495297000,
                            "owner": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "name": "Usuario de teste 3",
                                "id": 43
                            }
                        }
                    ]
                }
            }

            
# Group Topics
Ações relacionadas aos topicos
## Topicos [/tag]
### Get Tags [GET]

+ Request (form-data)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 201 (application/json)

    + Body

            {
              "status": true,
              "result": {
                    "tags": [
                        {   
                            "id": 1,
                            "name": "Swift"
                        },
                        {   
                            "id": 1,
                            "name": "Android"
                        },
                        {   
                            "id": 1,
                            "name": "React"
                        },
                        {   
                            "id": 1,
                            "name": "Comp2"
                        },
                        {   
                            "id": 1,
                            "name": "Computação II"
                        },
                        {   
                            "id": 1,
                            "name": "Vinícius"
                        }
                    ]
                }
            }

## Posts de um tópico [/tag/{tag_name}/posts?limit={limit}&page={page}]
### Get Posts [GET]

Solicita os posts de uma tag

+ Parameters
    + tag_name: "Android" (required, String) - Name of a tag.
    + limit: 4 (optional, Number) - Limit number of articles
        + Default: 4
    + page: 2 (optional, Number) - Page number of query result
        + Default: 1


+ Request (application/json)
    + Headers
    
            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "posts":
                    [
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 0",
                            "subtitle": "Esse é um subtitulo",
                            "views": 19,
                            "likes": 5,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "date": "2018-02-03T14:21:43.807525Z",
                            "edited_at": "2018-02-03T14:21:43.807525Z",
                            "author": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "first_name": "Renan",
                                "last_name": "Barbieri",
                                "username": "renanhb"
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 2",
                            "subtitle": "Esse é um subtitulo",
                            "views": 13,
                            "likes": 11,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "date": "2018-02-04T14:21:43.807525Z",
                            "edited_at": "2018-02-05T14:21:43.807525Z",
                            "author": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "username": "lcleite"
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 3",
                            "subtitle": "Esse é um subtitulo",
                            "views": 6,
                            "likes": 1,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "date": "2018-02-06T14:21:43.807525Z",
                            "edited_at": "2018-02-06T14:21:43.807525Z",
                            "author": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "username": "lcleite"
                            }
                        },
                        {
                            "id": 23,
                            "title": "Titulo do Artigo 4",
                            "subtitle": "Esse é um subtitulo",
                            "views": 14,
                            "likes": 10,
                            "image_url": "https://source.unsplash.com/random/100x100",
                            "date": "2018-02-07T14:21:43.807525Z",
                            "edited_at": "2018-02-07T15:21:43.807525Z",
                            "author": {
                                "avatar_url": "https://source.unsplash.com/random/80x80",
                                "first_name": "Vinícius",
                                "last_name": "Gusmão",
                                "username": "vini"
                            }
                        }
                    ]
                }
            }

# Group Posts
Ações relacionadas aos posts
## Post [/post]
Métodos do post
### Create Post [POST]
+ Attributes
    + title: "My test post" (required, string) - Title of a post.
    + description: "Bla bla bla" (required, string) - Description of a post.
    + text: "Ble ble eeeeee iiii ioooo uuuuuu" (required, string) - Text of a post.
    + tags: ["Tag1"] (required, array) - Tags of a post.

+ Request (form-data)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 201 (application/json)

    + Body

            {
              "status": true,
              "result": {
                    "post": {
                        "id": 7,
                        "tags": [
                            {   
                                "id": 1,
                                "name": "Tag1"
                            }
                        ],
                        "author": {
                            "username": "lcleite",
                            "first_name": "Leandro",
                            "last_name": "Leite",
                            "avatar_url": "/media/lcleite_avatar.jpg"
                        },
                        "title": "My test post",
                        "date": "2018-04-16T22:14:27.194962",
                        "edited_at": null,
                        "description": "Bla bla bla",
                        "image_url": null,
                        "views": 0,
                        "likes": 0,
                        "text": "Ble ble eeeeee iiii ioooo uuuuuu",
                        "reading_time": 0.02,
                        "who_liked": []
                    }
                }
            }
            
### Edit Post [PUT]
Edita uma postagem

+ Attributes
    + post_id: 1 (required, number) - ID of a post.
    + title: "My test post" (optional, string) - Title of a post.
    + description: "Bla bla bla" (optional, string) - Description of a post.
    + text: "Ble ble eeeeee iiii ioooo uuuuuu" (optional, string) - Text of a post.
    + tags: ["Tag1"] (optional, array) - Tags of a post (Array<string>).

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "post": {
                        "id": 7,
                        "tags": [
                            {
                                "id": 1,
                                "name": "Tag1"
                            }
                        ],
                        "author": {
                            "username": "lcleite",
                            "first_name": "Leandro",
                            "last_name": "Leite",
                            "avatar_url": "/media/lcleite_avatar.jpg"
                        },
                        "title": "My test post",
                        "date": "2018-04-16T22:14:27.194962",
                        "edited_at": null,
                        "description": "Bla bla bla",
                        "image_url": null,
                        "views": 0,
                        "likes": 0,
                        "text": "Ble ble eeeeee iiii ioooo uuuuuu",
                        "reading_time": 0.02,
                        "who_liked": []
                    }
                }
            }

## Actions of post [/post/{username}/{post_id}]
### Get Post [GET]
Recebe uma postagem

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, string) - OAuth2.0 Bearer Token authorization
    
    + Parameters
        + username: lcleite (required, string) - Username of a post author.
        + post_id: 1 (required, number) - ID of a post.

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "post": {
                        "id": 7,
                        "tags": [
                            {
                                "id": 1,
                                "name": "Tag1"
                            }
                        ],
                        "author": {
                            "username": "lcleite",
                            "first_name": "Leandro",
                            "last_name": "Leite",
                            "avatar_url": "/media/lcleite_avatar.jpg"
                        },
                        "title": "My test post",
                        "date": "2018-04-16T22:14:27.194962",
                        "edited_at": "2018-04-16T22:15:27.194962",
                        "description": "Bla bla bla",
                        "image_url": "https://source.unsplash.com/random/900x500",
                        "views": 0,
                        "likes": 0,
                        "text": "Ble ble eeeeee iiii ioooo uuuuuu",
                        "reading_time": 0.02,
                        "who_liked": []
                    }
                }
            }
            
## Comment [/post/<username>/<post_id>/comment]
Ações relacionadas a comentários de uma postagem

### Add[POST]
+ Attributes
    + text: "My comment" (required, string) - Text of a post comment.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, string) - OAuth2.0 Bearer Token authorization

    + Parameters
        + username: lcleite (required, string) - Username of a post author.
        + post_id: 1 (required, number) - ID of a post.                  

+ Response 201 (application/json)

    + Body

            {
                "status": true,
                "result": {
                "message": "Comentário inserido com sucesso"
            }
            
## List Comment [/post/{username}/{post_id}/comment?page={page_number}]
### Get list of comments [GET]
Lista os comentários de uma postagem

+ Parameters

    + username: lcleite (required, String) - Username of a post author.
    + post_id: 1 (required, Number) - ID of a post.
    + page_number: 1 (required, Number) - Page number of a comment list.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "page": 1,
                    "comments": [
                        {
                            "id": 1,
                            "author": {
                                "username": "lcleite",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "avatar_url": "/media/lcleite_avatar.jpg"
                            },
                            "date": "2018-04-17T00:58:41.763066Z",
                            "text": "Textuuuuu"
                        },
                        {
                            "id": 2,
                            "author": {
                                "username": "lcleite",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "avatar_url": "/media/lcleite_avatar.jpg"
                            },
                            "date": "2018-04-17T01:00:17.582593Z",
                            "text": "Textuuuuu 2"
                        },
                        {
                            "id": 3,
                            "author": {
                                "username": "lcleite",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "avatar_url": "/media/lcleite_avatar.jpg"
                            },
                            "date": "2018-04-17T01:08:13.400919Z",
                            "text": "Textuuuuu 3"
                        },
                        {
                            "id": 4,
                            "author": {
                                "username": "lcleite",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "avatar_url": "/media/lcleite_avatar.jpg"
                            },
                            "date": "2018-04-17T01:08:15.914948Z",
                            "text": "Textuuuuu 4"
                        },
                        {
                            "id": 5,
                            "author": {
                                "username": "lcleite",
                                "first_name": "Leandro",
                                "last_name": "Leite",
                                "avatar_url": "/media/lcleite_avatar.jpg"
                            },
                            "date": "2018-04-17T01:08:16.802236Z",
                            "text": "Textuuuuu 5"
                        }
                    ]
                }
            }

## Upload de imagem de uma postagem [/upload/post_image]
### Upload Post Image [POST]
Faz upload da imagem de imagem de uma postagem

+ Attributes
        + image_file: [File] (required, File) - File of a post image.
        
+ Request (form-data)
    + Headers
        
            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result": {
                    "message": "Upload realizado com sucesso",
                    "filename": "media/<file_name>.jpg"
                }
            }


# Group Tools
Ações relacionadas a ferramentas
## Pesquisa de usuário [/search/user?q={query}&page={page}]
### Get Result [GET]
+ Parameters
    + query: "Leandro" (required, String) - Query for search.
    + page: 1 (required, Number) - Page number of search result.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "page": "1",
                    "users":[
                        {
                            "avatar_url": "https://source.unsplash.com/random/80x80",
                            "username": "lcleite"
                            "first_name": "Leandro",
                            "last_name": "Leite"
                        },
                        {
                            "avatar_url": "https://source.unsplash.com/random/80x80",
                            "username": "lcleite"
                            "first_name": "Leandro",
                            "last_name": "Leite"
                        }
                    ]
                }
            }


## Pesquisa de postagem [/search/post?q={query}&page={page}]
### Get Result [GET]
+ Parameters
    + query: "Classe abstrata" (required, String) - Query for search.
    + page: 1 (required, Number) - Page number of search result.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "page": "1",
                    "posts":[
                      {
                        "id": 3,
                        "author": {
                          "username": "vini",
                          "first_name": "Vinicius",
                          "last_name": "Gusmão",
                          "avatar_url": null
                        },
                        "title": "Title 3",
                        "date": "2018-02-03T14:21:43.807525Z",
                        "edited_at": null,
                        "description": "Description 3",
                        "image_url": null,
                        "views": 1,
                        "likes": 0,
                        "tags": []
                        },
                        {
                        "id": 2,
                        "author": {
                          "username": "renan",
                          "first_name": "Renan",
                          "last_name": "Hozumi",
                          "avatar_url": null
                        },
                        "title": "Title 2",
                        "date": "2018-02-03T14:21:43.807525Z",
                        "edited_at": null,
                        "description": "Description 2",
                        "image_url": null,
                        "views": 1,
                        "likes": 2,
                        "tags": []
                      }
                    ]
                }
            }


## Pesquisa de tag [/search/tag?q={query}&page={page}]
### Get Result [GET]
+ Parameters
    + query: "Java" (required, String) - Query for search.
    + page: 1 (required, Number) - Page number of search result.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
                "status": true,
                "result":
                {
                    "page": "1",
                    "tags":[
                        {
                            "name": "Java",
                            "id": 23
                        },
                        {
                            "name": "JavaScript",
                            "id": 34
                        },
                        {
                            "name": "JavaServer Faces",
                            "id": 65
                        },
                        {
                            "name": "Java Reflection",
                            "id": 2
                        }
                    ]
                }
            }

## Pesquisa geral [/search/all?q={query}]
### Get Result [GET]
+ Parameters
    + query: "Hello" (required, String) - Query for search.

+ Request (application/json)
    + Headers

            Authorization: Bearer <user_key_auth> (required, String) - OAuth2.0 Bearer Token authorization

+ Response 200 (application/json)

    + Body

            {
              "status": true,
              "result": {
                  "users":[
                      {
                          "avatar_url": "https://source.unsplash.com/random/80x80",
                          "username": "lcleite",
                          "first_name": "Leandro",
                          "last_name": "Leite"
                      },
                      {
                          "avatar_url": "https://source.unsplash.com/random/80x80",
                          "username": "lcleite",
                          "first_name": "Leandro",
                          "last_name": "Leite"
                      }
                  ],
                  "posts":[
                    {
                      "id": 3,
                      "author": {
                        "username": "vini",
                        "first_name": "Vinicius",
                        "last_name": "Gusmão",
                        "avatar_url": "https://source.unsplash.com/random/80x80"
                      },
                      "title": "Title 3",
                      "date": "2018-02-03T14:21:43.807525Z",
                      "edited_at": "2018-02-03T14:21:43.807525Z",
                      "description": "Description 3",
                      "image_url": "https://source.unsplash.com/random/200x200",
                      "views": 1,
                      "likes": 0,
                      "tags": []
                    }
                  ],
                  "tags":[
                      {
                          "name": "Java",
                          "id": 23
                      },
                      {
                          "name": "JavaScript",
                          "id": 34
                      }
                  ]
              }
            }